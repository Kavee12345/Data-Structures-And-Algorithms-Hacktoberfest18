class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummyHead = new ListNode(0); // Dummy node to start the result list
        ListNode* current = dummyHead; // Pointer to traverse the result list
        int carry = 0; // Initialize carry to 0
        
        while (l1 != nullptr || l2 != nullptr) {
            int sum = carry;
            
            if (l1 != nullptr) {
                sum += l1->val;
                l1 = l1->next;
            }
            
            if (l2 != nullptr) {
                sum += l2->val;
                l2 = l2->next;
            }
            
            carry = sum / 10; // Calculate new carry
            current->next = new ListNode(sum % 10); // Add the current digit to the result list
            current = current->next; // Move to the next node
        }
        
        if (carry > 0) {
            current->next = new ListNode(carry); // If there's a remaining carry, add it as a new digit
        }
        
        ListNode* result = dummyHead->next; // Start of the actual result
        delete dummyHead; // Free the dummy node
        
        return result;
    }
};
